import path from "path";
import os from "os";
import fs from "fs-extra";
import _ from "lodash";
import type { Test } from "testplane";
import { writeStoryTestsFile } from "./write-tests-file";
import { STORYBOOK_TEST_DIRNAME } from "../../constants";
import type { StorybookStoryExtended } from "../get-stories";

export interface TestplaneOpts {
    autoScreenshots: boolean;
    customAutoScreenshots: Record<string, { globals: Record<string, unknown>}>;
}

const testplaneTestNameSuffix = ".testplane.js";

const getStorybookTestsTmpDir = (): string => path.join(os.tmpdir(), STORYBOOK_TEST_DIRNAME);

const getEmptyStorybookTestsTmpDir = async (): Promise<string> => {
    const testsTmpDir = getStorybookTestsTmpDir();

    await fs.emptyDir(testsTmpDir);

    return testsTmpDir;
};

export const getStoryFile = (test: Test): string => {
    const testFile: string = test.file;
    const testsTmpDir = getStorybookTestsTmpDir();

    if (!testFile.startsWith(testsTmpDir) || !testFile.endsWith(testplaneTestNameSuffix)) {
        throw new Error(
            `Can't get storyfile of ${test.fullTitle()}, because it was not autogenerated by storybook-testplane`,
        );
    }

    return path.relative(testsTmpDir, testFile).slice(0, -testplaneTestNameSuffix.length);
};

const getStoryTestPath = (testsDir: string, story: StorybookStoryExtended): string =>
    path.resolve(testsDir, story.importPath + testplaneTestNameSuffix);

export const buildStoryTestFiles = async (
    stories: StorybookStoryExtended[],
    opts: TestplaneOpts,
): Promise<string[]> => {
    const testsDir = await getEmptyStorybookTestsTmpDir();

    const groupedByTestFileStories = _.groupBy(stories, story => getStoryTestPath(testsDir, story));
    const storyTestFiles = Object.keys(groupedByTestFileStories);

    const promises = storyTestFiles.map(testFile =>
        writeStoryTestsFile({
            testFile,
            opts,
            stories: groupedByTestFileStories[testFile],
        }),
    );

    await Promise.all(promises);

    return storyTestFiles;
};
